{"ast":null,"code":"var _jsxFileName = \"C:\\\\book-directory\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // You can modify this file to style your app if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]); // State to store list of notes (titles)\n  const [selectedNote, setSelectedNote] = useState(null); // State to store selected note's content\n\n  // Fetch the list of notes (titles)\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/notes');\n      const data = await response.json();\n      setNotes(data); // Set the list of notes\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  // Fetch content for the selected note\n  const fetchNoteContent = async noteId => {\n    try {\n      const response = await fetch(`http://localhost:8080/notes/${noteId}`);\n      const data = await response.json();\n      setSelectedNote(data); // Set the selected note's content\n    } catch (error) {\n      console.error('Error fetching note content:', error);\n    }\n  };\n\n  // Use useEffect to load notes when the component mounts\n  useEffect(() => {\n    fetchNotes(); // Fetch the list of notes when the component is first loaded\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedNote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedNote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedNote(null),\n        children: \"Back to List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => fetchNoteContent(note.note_id),\n          children: note.title\n        }, note.note_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GD1v6ScANAIWM9GEvhk2BHUqdYc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","fetchNotes","response","fetch","data","json","error","console","fetchNoteContent","noteId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onClick","map","note","note_id","_c","$RefreshReg$"],"sources":["C:/book-directory/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';  // You can modify this file to style your app if needed\n\nfunction App() {\n  const [notes, setNotes] = useState([]); // State to store list of notes (titles)\n  const [selectedNote, setSelectedNote] = useState(null); // State to store selected note's content\n\n  // Fetch the list of notes (titles)\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/notes');\n      const data = await response.json();\n      setNotes(data); // Set the list of notes\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  // Fetch content for the selected note\n  const fetchNoteContent = async (noteId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/notes/${noteId}`);\n      const data = await response.json();\n      setSelectedNote(data); // Set the selected note's content\n    } catch (error) {\n      console.error('Error fetching note content:', error);\n    }\n  };\n\n  // Use useEffect to load notes when the component mounts\n  useEffect(() => {\n    fetchNotes(); // Fetch the list of notes when the component is first loaded\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Book Directory</h1>\n\n      {/* Display selected note's content */}\n      {selectedNote ? (\n        <div>\n          <h2>{selectedNote.title}</h2>\n          <p>{selectedNote.content}</p>\n          <button onClick={() => setSelectedNote(null)}>Back to List</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Notes List:</h2>\n          <ul>\n            {notes.map((note) => (\n              <li key={note.note_id} onClick={() => fetchNoteContent(note.note_id)}>\n                {note.title}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}