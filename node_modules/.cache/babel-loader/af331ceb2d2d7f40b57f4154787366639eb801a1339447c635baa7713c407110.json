{"ast":null,"code":"var _jsxFileName = \"C:\\\\book-directory\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]); // List of notes to display (search results or full list)\n  const [selectedNote, setSelectedNote] = useState(null); // Content of the selected note\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query state\n\n  // Fetch all notes initially\n  useEffect(() => {\n    fetch('http://localhost:8080/notes').then(response => response.json()).then(data => setNotes(data));\n  }, []);\n\n  // Fetch note content when a title is clicked\n  const fetchNoteContent = id => {\n    fetch(`http://localhost:8080/notes/${id}`).then(response => response.json()).then(data => {\n      console.log(\"Fetched note:\", data); // ðŸ‘ˆ this will show the data in console\n      setSelectedNote(data.content); // Update selected note content\n    });\n  };\n\n  // Handle search functionality\n  const handleSearch = async () => {\n    if (searchQuery.trim()) {\n      // Search notes based on the query\n      fetch(`http://localhost:8080/search?q=${searchQuery}`).then(response => response.json()).then(data => {\n        setNotes(data.results); // Update list with search results\n        setSelectedNote(null); // Clear content when search results update\n      });\n    } else {\n      // If no query, reset to the original list\n      fetch('http://localhost:8080/notes').then(response => response.json()).then(data => setNotes(data));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        borderRight: '1px solid #ccc',\n        paddingRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          placeholder: \"Search notes...\",\n          style: {\n            padding: '8px',\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px',\n            cursor: 'pointer'\n          },\n          onClick: () => fetchNoteContent(note.note_id) // Fetch content when clicked\n          ,\n          children: note.title\n        }, note.note_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        paddingLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Note Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: selectedNote || \"Click on a title to view its content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VubZZwRXke1fr8MC/Cp68kOg9OU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","searchQuery","setSearchQuery","fetch","then","response","json","data","fetchNoteContent","id","console","log","content","handleSearch","trim","results","style","display","padding","children","width","borderRight","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","placeholder","marginRight","onClick","listStyle","map","note","cursor","note_id","title","flex","paddingLeft","whiteSpace","_c","$RefreshReg$"],"sources":["C:/book-directory/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);  // List of notes to display (search results or full list)\n  const [selectedNote, setSelectedNote] = useState(null);  // Content of the selected note\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query state\n\n  // Fetch all notes initially\n  useEffect(() => {\n    fetch('http://localhost:8080/notes')\n      .then(response => response.json())\n      .then(data => setNotes(data));\n  }, []);\n\n  // Fetch note content when a title is clicked\n  const fetchNoteContent = (id) => {\n    fetch(`http://localhost:8080/notes/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Fetched note:\", data); // ðŸ‘ˆ this will show the data in console\n        setSelectedNote(data.content);  // Update selected note content\n      });\n  };\n\n  // Handle search functionality\n  const handleSearch = async () => {\n    if (searchQuery.trim()) {\n      // Search notes based on the query\n      fetch(`http://localhost:8080/search?q=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n          setNotes(data.results);  // Update list with search results\n          setSelectedNote(null);  // Clear content when search results update\n        });\n    } else {\n      // If no query, reset to the original list\n      fetch('http://localhost:8080/notes')\n        .then(response => response.json())\n        .then(data => setNotes(data));\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', padding: '20px' }}>\n      <div style={{ width: '300px', borderRight: '1px solid #ccc', paddingRight: '20px' }}>\n        <h2>Book Titles</h2>\n\n        {/* Search bar */}\n        <div style={{ marginBottom: '20px' }}>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search notes...\"\n            style={{ padding: '8px', marginRight: '8px' }}\n          />\n          <button onClick={handleSearch}>Search</button>\n        </div>\n\n        {/* List of notes */}\n        <ul style={{ listStyle: 'none', padding: 0 }}>\n          {notes.map(note => (\n            <li\n              key={note.note_id}\n              style={{ marginBottom: '10px', cursor: 'pointer' }}\n              onClick={() => fetchNoteContent(note.note_id)} // Fetch content when clicked\n            >\n              {note.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div style={{ flex: 1, paddingLeft: '20px' }}>\n        <h2>Note Content</h2>\n        <div style={{ whiteSpace: 'pre-wrap' }}>\n          {selectedNote || \"Click on a title to view its content.\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}