{"ast":null,"code":"var _jsxFileName = \"C:\\\\book-directory\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Fetch all notes on initial load\n  useEffect(() => {\n    fetch('http://localhost:8080/notes').then(response => response.json()).then(data => setNotes(data));\n  }, []);\n\n  // Fetch note content when a title is clicked\n  const fetchNoteContent = id => {\n    if (id) {\n      fetch(`http://localhost:8080/notes/${id}`).then(response => response.json()).then(data => {\n        console.log(\"Fetched note:\", data); // ðŸ‘ˆ add this for debugging\n        setSelectedNote(data.content); // âœ… correct\n      });\n    }\n  };\n\n  // Handle search query change\n  const handleSearch = async () => {\n    if (searchQuery.trim()) {\n      // Search notes based on the query\n      fetch(`http://localhost:8080/search?q=${searchQuery}`).then(response => response.json()).then(data => {\n        console.log(\"Search Results:\", data.results); // Log search results for debugging\n        // Ensure the search results have the correct structure\n        if (data.results && Array.isArray(data.results)) {\n          setNotes(data.results); // Update list with search results\n        } else {\n          console.error(\"Search results format is incorrect\", data);\n        }\n        setSelectedNote(null); // Clear content when search results update\n      });\n    } else {\n      // If no query, reset to the original list\n      fetch('http://localhost:8080/notes').then(response => response.json()).then(data => setNotes(data)); // Reset to all notes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        borderRight: '1px solid #ccc',\n        paddingRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for notes...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value) // Update search query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px',\n            cursor: 'pointer'\n          },\n          onClick: () => fetchNoteContent(note.note_id) // Fetch content when clicked\n          ,\n          children: note.title\n        }, note.note_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        paddingLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Note Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: selectedNote || \"Click on a title to view its content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZgFgeWo0sS1ANv4Kvgv+ocY2FSM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","searchQuery","setSearchQuery","fetch","then","response","json","data","fetchNoteContent","id","console","log","content","handleSearch","trim","results","Array","isArray","error","style","display","padding","children","width","borderRight","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","listStyle","map","note","marginBottom","cursor","note_id","title","flex","paddingLeft","whiteSpace","_c","$RefreshReg$"],"sources":["C:/book-directory/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Fetch all notes on initial load\n  useEffect(() => {\n    fetch('http://localhost:8080/notes')\n      .then(response => response.json())\n      .then(data => setNotes(data));\n  }, []);\n\n  // Fetch note content when a title is clicked\n  const fetchNoteContent = (id) => {\n    if (id) {\n      fetch(`http://localhost:8080/notes/${id}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Fetched note:\", data); // ðŸ‘ˆ add this for debugging\n          setSelectedNote(data.content); // âœ… correct\n        });\n    }\n  };\n\n  // Handle search query change\n  const handleSearch = async () => {\n    if (searchQuery.trim()) {\n      // Search notes based on the query\n      fetch(`http://localhost:8080/search?q=${searchQuery}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Search Results:\", data.results);  // Log search results for debugging\n          // Ensure the search results have the correct structure\n          if (data.results && Array.isArray(data.results)) {\n            setNotes(data.results);  // Update list with search results\n          } else {\n            console.error(\"Search results format is incorrect\", data);\n          }\n          setSelectedNote(null);  // Clear content when search results update\n        });\n    } else {\n      // If no query, reset to the original list\n      fetch('http://localhost:8080/notes')\n        .then(response => response.json())\n        .then(data => setNotes(data));  // Reset to all notes\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', padding: '20px' }}>\n      <div style={{ width: '300px', borderRight: '1px solid #ccc', paddingRight: '20px' }}>\n        <h2>Book Titles</h2>\n\n        {/* Search Bar */}\n        <input\n          type=\"text\"\n          placeholder=\"Search for notes...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)} // Update search query\n        />\n        <button onClick={handleSearch}>Search</button>\n\n        <ul style={{ listStyle: 'none', padding: 0 }}>\n          {notes.map(note => (\n            <li\n              key={note.note_id}\n              style={{ marginBottom: '10px', cursor: 'pointer' }}\n              onClick={() => fetchNoteContent(note.note_id)} // Fetch content when clicked\n            >\n              {note.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div style={{ flex: 1, paddingLeft: '20px' }}>\n        <h2>Note Content</h2>\n        <div style={{ whiteSpace: 'pre-wrap' }}>\n          {selectedNote || \"Click on a title to view its content.\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}